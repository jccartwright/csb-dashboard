import{cm as $,aL as C,eo as q,fK as z,cv as j,C as I,iY as F,em as G,iZ as O,w as E,a_ as P}from"./index-1b8c5637.js";import{a as A}from"./elevationInfoUtils-c6fdc0e0.js";async function K(s,d,p,f,r){const{elevationProvider:g,renderCoordsHelper:c,spatialReference:b}=s,{elevationInfo:y}=d,m=q(y,!0),w=await z(m,b,r);j(r);const i=[],u=new Set,l=new Set;for(const{objectId:e,points:a}of f){const n=p(e);if(I(n)){for(const o of a)i.push(o[2]);u.add(e);continue}n.isDraped&&l.add(e);const t=n.graphic.geometry;v.setFromElevationInfo(A(t,y)),v.updateFeatureExpressionInfoContext(w,n.graphic,d),h.spatialReference=s.spatialReference;for(const{x:o,y:x,z:D}of a)h.x=o,h.y=x,h.z=D??0,F(h,g,v,c,S),i.push(S.z)}return{elevations:i,drapedObjectIds:l,failedObjectIds:u}}const v=new G,h=$(0,0,0,C.WGS84),S=new O;async function L(s,d,p){if(I(s)||d.candidates.length===0)return R;const f=s.graphics3DGraphicsByObjectID??s.graphics3DGraphics,r=[],g=[],{renderer:c}=s,b=E(c)&&"arcadeRequired"in c&&c.arcadeRequired?P():null,y=async(e,{graphic:a,graphics3DSymbol:n})=>{const t=await b,o=await s.getRenderingInfoAsync(a,c,t,{signal:p});return I(o)?[]:n.queryForSnapping(e,w,o,p)},{candidates:m,spatialReference:w}=d;for(let e=0;e<m.length;++e){const a=m[e],{objectId:n}=a,t=typeof n=="number"?f==null?void 0:f.get(n):void 0;if(I(t))continue;const{graphics3DSymbol:o}=t;o.symbologySnappingSupported&&(r.push(y(a,t)),g.push(e))}if(r.length===0)return R;const i=await Promise.all(r);j(p);const u=[],l=[];for(let e=0;e<i.length;++e){const a=i[e],n=g[e];for(const t of a)u.push(t),l.push(n)}return{candidates:u,sourceCandidateIndices:l}}const R={candidates:[],sourceCandidateIndices:[]};export{L as a,K as m};
